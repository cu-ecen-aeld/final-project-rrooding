#!/bin/sh

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/OpenSprinkler
NAME=ospi
DESC="OpenSprinkler"
PIDFILE=/var/run/$NAME.pid
CWD=/usr/local/OpenSprinkler
USB_CONFIG_SCRIPT=/usr/local/bin/ospi-usb-config.sh
CONFIG_LOAD_TIMEOUT=10

test -x $DAEMON || exit 0

set -e

# Function to wait for USB devices to be mounted
wait_for_usb_devices() {
    echo "Waiting for USB devices to be mounted..."
    local count=0
    while [ $count -lt $CONFIG_LOAD_TIMEOUT ]; do
        if [ -d "/media" ]; then
            # Check if any USB devices are mounted
            for usb_mount in /media/usb*; do
                if [ -d "$usb_mount" ] && mountpoint -q "$usb_mount" 2>/dev/null; then
                    echo "USB device found at $usb_mount"
                    return 0
                fi
            done
        fi
        sleep 1
        count=$((count + 1))
    done
    echo "No USB devices found after ${CONFIG_LOAD_TIMEOUT}s timeout"
    return 1
}

# Function to load USB configuration
load_usb_configuration() {
    if [ -x "$USB_CONFIG_SCRIPT" ]; then
        echo "Checking for OpenSprinkler configuration on USB devices..."
        "$USB_CONFIG_SCRIPT" load
        if [ $? -eq 0 ]; then
            echo "Successfully loaded configuration from USB"
            return 0
        else
            echo "No valid configuration found on USB devices, using defaults"
            return 1
        fi
    else
        echo "USB configuration script not found, skipping USB config load"
        return 1
    fi
}

# Function to save configuration to USB on shutdown
save_usb_configuration() {
    if [ -x "$USB_CONFIG_SCRIPT" ]; then
        echo "Attempting to backup configuration to USB..."
        "$USB_CONFIG_SCRIPT" save
    fi
}

case "$1" in
  start)
    echo "Starting $DESC"
    
    # Create working directory if it doesn't exist
    mkdir -p "$CWD"
    
    # Wait a short time for USB devices to be detected and mounted
    wait_for_usb_devices
    
    # Try to load configuration from USB
    load_usb_configuration
    
    # Start the daemon
    start-stop-daemon --start --quiet --pidfile $PIDFILE \
        --exec $DAEMON --background --make-pidfile --chdir $CWD
    
    if [ $? -eq 0 ]; then
        echo "$DESC started successfully"
    else
        echo "Failed to start $DESC"
        exit 1
    fi
    ;;
  stop)
    echo "Stopping $DESC"
    
    # Try to save configuration to USB before stopping
    save_usb_configuration
    
    start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
    rm -f $PIDFILE
    echo "$DESC stopped"
    ;;
  restart|force-reload)
    echo "Restarting $DESC"
    $0 stop
    sleep 2
    $0 start
    ;;
  reload-config)
    echo "Reloading configuration from USB"
    load_usb_configuration
    if [ -f $PIDFILE ]; then
        echo "Sending reload signal to $DESC"
        kill -HUP $(cat $PIDFILE) 2>/dev/null || true
    fi
    ;;
  save-config)
    echo "Saving configuration to USB"
    save_usb_configuration
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart|force-reload|reload-config|save-config}" >&2
    exit 1
    ;;
esac

exit 0